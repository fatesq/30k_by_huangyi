<style lang="less">
page {
  background-color: #f2f2f2;
}
.field-index--van-field {
  background-color: #f2f2f2 !important;
}
.van-search {
  background-color: #FFF !important;
}
.select {
  padding: 10px 0px;
}
.item {
  background-color: #FFF;
  margin-bottom: 20rpx;
  .title {
    display: flex;
    padding: 40rpx;
    border-bottom: 1px solid #ddd;
    .img {
      width: 320rpx;
      height: 200rpx;
      background-color: #eee;
      margin-right: 40rpx;
    }
    .box {
      display: flex;
      flex-direction: column-reverse;
      max-width: 60%;
      .time {
        color: #ccc;
      }
      .value {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20rpx;
        .price {
          color: #CE3C39;
        }
      }
    }
  }
  .detail {
    display: flex;
    .list {
      width: 500rpx;
      view {
        padding: 10rpx 0rpx 10rpx 38rpx;
        font-size:14px;
      }
      image {
        vertical-align:middle;
        display:inline-block;
      }
    }
    .more {
      width: 250rpx;
      display: flex;
      justify-content:center;
      align-items:Center;
      button {
        background-color: #FDE9E9;
        border-color: #FDE9E9 !important;
        color:#E64340;
        font-size:16px;
        height:32px;
        line-height:32px;
        // width:130rpx;
        border-radius:2px;
      }
    }
  }
}
.icon {
  width: 20px;
  height: 20px;
   
}
.dian {
  // width: 490rpx;
  max-width: 490rpx;
  -webkit-line-clamp:2;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
</style>

<template>
<view>
  <view wx:if="{{!show}}">
    <van-search value="" placeholder="项目编号/项目名称" bind:search="search" />
    <view class="select">
      <van-cell title="{{industryName ? industryName : '请选择行业'}}" is-link @tap="showIndustry()"/>
    </view>
    <view class="item" wx:for="{{list}}" wx:key="index">
      <view class="title">
        <image class="img" mode="aspectFit" src="{{item.imageUrl}}" />
        <view class="box">
          <view class="time" style="font-size:28rpx;">{{item.createTime}}</view>
          <view class="value">
            <text class="dian" style="font-size:32rpx;font-weight:600">{{item.industry.name}}</text>
            <text class="price" style="text-align:right;white-space: nowrap;">{{item.projectReference.totalInvestment}}万元</text>
          </view>
          <view class="value" style="color:#999;font-size: 30rpx;">
            <text class="dian">No.{{item.code}}</text>
          </view>
          <view class="value dian" style="font-weight:600;font-size: 36rpx;">
            <text class="dian">{{item.name}}</text>
          </view>  
        </view>
      </view>
      <view class="detail">
        <view class="list">
          <view wx:if="{{item.industry.isStatic == 0}}">
            <image class="icon" src="../ic/ic_date@2x.png"/>
            <text wx:if="{{item.investment}}"> {{item.investment.staticProfile.forecastYearProfileFrom}}% ~ {{item.investment.staticProfile.forecastYearProfileTo}}%</text>
          </view>
          <view wx:if="{{item.industry.isStatic == 1}}">
            <image class="icon" src="../ic/ic_date@2x.png"/>
            <text wx:if="{{item.investment}}"> {{item.countResult}}万元</text>
          </view>
          <view>
            <image class="icon" src="../ic/ic_mine@2x.png"/>
            {{item.enterpriseMember}}
          </view>
          <view>
            <image class="icon" src="../ic/ic_place@2x.png"/>
            {{item.areaName}}
          </view>
          <view>
            
            <image class="icon" src="../ic/ic_company@2x.png"/>
            {{item.enterpriseName}}
          </view>
        </view>
        <view class="more">
          <button @tap="toDetails({{item}})"> {{item.isFinish == 0 ? '继续进件' : '详情'}} </button>
        </view>
      </view>
    </view>
  </view>
  <SelectIndustry wx:if="{{show}}" />
</view>  
</template>

<script>
import wepy from 'wepy'
import api from '../api/api'
import utils from '@/utils/utils'
import selectIndustry from '../components/ilist'

export default class Search extends wepy.page {
  config = {
    navigationBarTitleText: '项目检索',
    usingComponents: {
      'van-search': "../components/van/search/index",
      "van-icon": "../components/van/icon/index",
      'van-cell': '../../components/van/cell/index',
      'van-cell-group': '../../components/van/cell-group/index',
      'van-field': '../../components/van/field/index',
      'van-switch-cell': '../../components/van/switch-cell/index',
      'van-radio': '../../components/van/radio/index',
      'van-radio-group': '../../components/van/radio-group/index',
      'van-collapse': '../../components/van/collapse/index',
      'van-collapse-item': '../../components/van/collapse-item/index'
    }
  }

  components = {
    SelectIndustry: selectIndustry
  }

  data = {
    list: [],
    show: false,
    industryId: '',
    industryName: '',
  }

  methods = {
    showIndustry() {
      this.$broadcast('showSelectAll')
      this.show = true
      this.$apply()
    },
    toSelectIndustry() {
      wx.navigateTo({
        url: 'selectIndustry'
      })
    },
    toDetails(item) {
      if (item.isFinish == 1) {
        wx.navigateTo({
          url: `details/index?id=${item.id}&code=${item.code}`
        })
      } else {
        wx.setStorageSync('pId', item.id)
        wx.setStorageSync('enterpriseSocialNum', item.enterpriseSocialNum)
        wx.setStorageSync('industryId', item.industry.industryId)
        wx.setStorageSync('belongIndustry', item.industry.belongIndustry)
        wx.setStorageSync('industryType',item.industry.industryType)
        wx.setStorageSync('isStatic', item.industry.isStatic)
        wx.navigateTo({ url: item.brand ? 'action/brand' : 'action/project' })
      }
    },
    async search(e) {
      if (!e.detail) {
        this.showList()
        return 
      }
      try {
        const json = await api.loadProjectByCodeOrName({
          method: 'GET',
          query: {
            codeOrName : e.detail
          }
        })
        if (json.data.code == 'success') {
          json.data.data.forEach(item => {
            if (item.investment && item.industry.isStatic == 1) {
              const arr = item.investment.trialCalculation.map(i => {
                return i.countResult
              })
              item.countResult = Math.max.apply(null, arr)
            }
          });
          this.list = json.data.data
          this.$apply()
        } else {
          utils.alert(json.data.msg || json.data.description)
        }
      } catch (e) {
        console.log(e)
        utils.alert('系统异常')
      }
    }
  }

  events = {
    saveIndustry(id, name, belongIndustry) {
       this.getList(id)
       this.industryId = id
       this.industryName = name
       this.belongIndustry = belongIndustry
       this.show = false
       this.$apply()
    },
    clear() {
       this.industryName = '全部行业'
       this.showList()
       this.show = false
       this.$apply()
    }
  }

  onShow() {
    wx.showLoading({
      title: '加载中',
    })
    setTimeout(function () {
      wx.hideLoading()
    }, 1000)
    this.industryName = ''
    this.showList()
    this.$broadcast('reload');
  }

  async getList(id) {
    try {
      const json = await api.loadAllProjectByIndustryId({
        method: 'GET',
        query: {
          industryId: id
        }
      })
      if (json.data.code == 'success') {
        json.data.data.forEach(item => {
          if (item.investment && item.industry.isStatic == 1) {
            const arr = item.investment.trialCalculation.map(i => {
              return i.countResult
            })
            item.countResult =  Math.max.apply(null, arr)
          }
        });
        this.list = json.data.data
        console.log(this.list)
        this.$apply()
      } else {
        utils.alert(json.data.msg || json.data.description)
      }
    } catch (e) {
      console.log(e)
      utils.alert('系统异常')
    }
  }

  async showList() {
     try {
      const json = await api.loadAllProjectByActorId({
        method: 'GET'})
      if (json.data.code == 'success') {
        json.data.data.forEach(item => {
          if (item.investment && item.industry.isStatic == 1) {
            const arr = item.investment.trialCalculation.map(i => {
              return i.countResult
            })
            item.countResult = Math.max.apply(null, arr)
          }
        });
        this.list = json.data.data
        this.$apply()
      } else {
        utils.alert(json.data.msg || json.data.description)
      }
    } catch (e) {
      console.log(e)
      utils.alert('系统异常')
    }
    
  }

   

}
</script>