<style lang="less">
page {
  background-color: #f4f4f4;
}
.panel-box {
  margin-bottom: 20rpx;
  .item {
    padding: 10px 15px;
    border-bottom: 1px solid #f4f4f4;
  }
  .add {
    display: flex;
    justify-content: center;
    align-items: Center;
    color: #bbb;
  }
}
.switch {
   padding: 10px 15px;
  display: flex;
  justify-content: space-around;
  text-align: left
}

.fix {
  position: fixed;
  width: 100%;
  bottom: 0;
  z-index: 99;
  button {
    border-radius: 0px;
  }
}
</style>
<template>
<view>
  <view wx:if="{{showIndex}}" style="padding-bottom: 50px">
    <van-panel custom-class="panel-box" title="公私分类">
      <van-radio-group custom-class="switch" value="{{ publicFlag }}" bind:change="switchChange">
        <van-radio name="{{0}}">对组织</van-radio>
        <van-radio name="{{1}}">对个人</van-radio>
      </van-radio-group>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 0}}" custom-class="panel-box" title="存续时长分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{saveTimeDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},saveTimeDistribution)">
        <view class="item">
          {{item.dataFrom}}至{{item.dataTo}}年占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('saveTimeShow')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加存续时长分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 0}}" custom-class="panel-box" title="性质分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{natureDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},natureDistribution)">
        <view class="item">
          {{item.name}}占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showNature')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加性质分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 0}}" custom-class="panel-box" title="规模分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{scaleDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},scaleDistribution)">
        <view class="item">
          {{item.dataFrom}}至{{item.dataTo}}人占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showScale')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加规模分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 0}}" custom-class="panel-box" title="行业分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{industryDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},industryDistribution)">
        <view class="item">
          {{item.name}}占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showIndustry')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加行业分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 1}}" custom-class="panel-box" title="年龄分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{ageDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},ageDistribution)">
        <view class="item">
          {{item.dataFrom}}至{{item.dataTo}}岁占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showAge')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加年龄分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 1}}" custom-class="panel-box" title="性别分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{sexDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},sexDistribution)">
        <view class="item">
          女性占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showSex')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加性别分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 1}}" custom-class="panel-box" title="收入分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{incomeDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},incomeDistribution)">
        <view class="item">
          年入{{item.dataFrom}}至{{item.dataTo}}万元占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showIncome')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加收入分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 1}}" custom-class="panel-box" title="职业分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{occupationDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},occupationDistribution)">
        <view class="item">
          {{item.name}}占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showJob')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加职业分布
      </view>
    </van-panel>

    <van-panel wx:if="{{publicFlag == 1}}" custom-class="panel-box" title="特征分布">
      <view>
        <van-swipe-cell right-width="{{ 65 }}" wx:for="{{featuresDistribution}}" wx:key="index" async-close bind:close="closeSwiper({{index}},featuresDistribution)">
        <view class="item" wx:for="{{featuresDistribution}}" wx:key="index">
         {{item.name}}占{{item.count}}%
        </view>
        <view slot="right">删除</view>
        </van-swipe-cell>
      </view>
      <view class="item add" @tap="show('showSp')">
        <van-icon name="add-o" custom-style="display: block;margin-right: 10px"/> 添加特征分布
      </view>
    </van-panel>

    <view class="fix">
      <button type="warn" @tap="toNext">下一步</button>
    </view>
  </view>
  <SaveTime wx:if="{{saveTimeShow}}"/>
  <Nature wx:if="{{showNature}}" />
  <Scale wx:if="{{showScale}}"/>
  <Industry wx:if="{{showIndustry}}" />
  <List wx:if="{{showList}}" :list.sync="list"/>
  <Age wx:if="{{showAge}}" />
  <Sex wx:if="{{showSex}}" />
  <Price wx:if="{{showIncome}}" />
  <Job wx:if="{{showJob}}" />
  <JobList wx:if="{{showJobList}}"  :list.sync="jobList"/> 
  <Sp wx:if="{{showSp}}" />
  <SpList wx:if="{{showSpList}}"  :list.sync="spList" />
</view>
</template>
<script>
import wepy from 'wepy'
import api from '../../api/api'
import utils from '../../utils/utils'
import saveTime from '../../components/drawAdd/saveTime'
import nature from '../../components/drawAdd/nature'
import scale from '../../components/drawAdd/scale'
import industry from '../../components/drawAdd/industry'
import list from '../../components/drawAdd/list'
import age from '../../components/drawAdd/age'
import sex from '../../components/drawAdd/sex'
import price from '../../components/drawAdd/price'
import job from '../../components/drawAdd/job'
import jobList from '../../components/drawAdd/jobList'
import sp from '../../components/drawAdd/sp'
import spList from '../../components/drawAdd/spList'

export default class Draw extends wepy.page {
  config = {
    navigationBarTitleText: '客户群体画像',
    usingComponents: {
      'van-icon': '../../components/van/icon/index',
      'van-cell': '../../components/van/cell/index',
      'van-cell-group': '../../components/van/cell-group/index',
      'van-field': '../../components/van/field/index',
      'van-panel': '../../components/van/panel/index',
      'van-switch-cell': '../../components/van/switch-cell/index',
      'van-radio': '../../components/van/radio/index',
      'van-radio-group': '../../components/van/radio-group/index',
      'van-collapse': '../../components/van/collapse/index',
      'van-collapse-item': '../../components/van/collapse-item/index',
      'van-checkbox': '../../components/van/checkbox/index',
      'van-checkbox-group': '../../components/van/checkbox-group/index'
    }
  }

  components = {
    SaveTime: saveTime,
    Nature: nature,
    Scale: scale,
    Industry: industry,
    List: list,
    Age: age,
    Sex: sex,
    Price: price,
    Job: job,
    JobList: jobList,
    Sp: sp,
    SpList: spList
  };

  data = {
    publicFlag: 0,
    saveTimeShow: false,
    saveTimeDistribution: [],
    showNature: false,
    natureDistribution: [],
    showScale: false,
    scaleDistribution: [],
    showIndustry: false,
    industryDistribution: [],
    showList: false,
    list: [],
    showJobList: false,
    jobList: [],
    showSpList: false,
    spList: [],
    showAge: false,
    ageDistribution: [],
    showSex: false,
    sexDistribution: [],
    showIncome: false,
    incomeDistribution: [],
    showJob: false,
    occupationDistribution: [],
    showSp: false,
    featuresDistribution: []
  }

  computed = {
    showIndex () {
      return !this.saveTimeShow && !this.showNature && !this.showScale && !this.showIndustry && !this.showList && !this.showSp
        && !this.showAge && !this.showSex && !this.showIncome && !this.showJob && !this.showJobList && !this.showSpList
    }
  }

  methods = {
    closeSwiper(index,name,event) {
      const { position, instance } = event.detail;
      switch (position) {
        case 'right':
          this[name].splice(index,1)
          instance.close();
          break;
      }
    },
    show(name) {
      this[name] = true
      this.$apply()
    },
    switchChange(e) {
      this.publicFlag = parseInt(e.detail)
      this.$apply()
    },
    async toNext() {
      let param = {projectId: wx.getStorageSync('pId')}
      if (this.publicFlag === 0) {
        if (this.saveTimeDistribution.length < 1 || this.natureDistribution.length < 1 || this.scaleDistribution.length < 1 || this.industryDistribution.length < 1) {
          utils.alert('请完善信息')
          return false
        }
        param.customerList0 = JSON.stringify(this.saveTimeDistribution)
        param.customerList1 = JSON.stringify(this.natureDistribution)
        param.customerList2 = JSON.stringify(this.scaleDistribution)
        param.customerList3 = JSON.stringify(this.industryDistribution)
      } else {
        if (this.featuresDistribution.length < 1 || this.ageDistribution.length < 1 || this.sexDistribution.length < 1 || this.incomeDistribution.length < 1 || this.occupationDistribution.length < 1) {
          utils.alert('请完善信息')
          return false
        }
        param.customerList0 = JSON.stringify(this.ageDistribution)
        param.customerList1 = JSON.stringify(this.sexDistribution)
        param.customerList2 = JSON.stringify(this.incomeDistribution)
        param.customerList3 = JSON.stringify(this.occupationDistribution)
        param.customerList4 = JSON.stringify(this.featuresDistribution)
      }
      try {
        const json = await api.customer({
          method: 'FORM',
          query: param
        })
        if (json.data.code === 'success') {
          wx.navigateTo({ url: wx.navigateTo({ url: wx.getStorageSync('belongidustry') == 1 ? 'manageB' : 'manage' }) })
        } else {
          utils.alert(json.data.msg || json.data.description)
        }
      } catch (e) {
        console.log(e)
        utils.alert('系统异常')
      }
      
    }
  }

  async getInfo(id) {
    try {
      const json = await api.loadCustomerByProjectId({
        method: 'GET',
        query: {
          projectId: wx.getStorageSync('pId')
        }
      })
      if (json.data.code == 'success') {
        const i = json.data.data
        if (i.length > 0) {
          if (i[0].type == 0) {
            this.saveTimeDistribution = i.filter(res => res.mId == 0)
            this.natureDistribution = i.filter(res => res.mId == 1)
            this.scaleDistribution = i.filter(res => res.mId == 2)
            this.industryDistribution = i.filter(res => res.mId == 3)
          }
          if (i[0].type == 1) {
            this.ageDistribution = i.filter(res => res.mId == 0)
            this.sexDistribution = i.filter(res => res.mId == 1)
            this.incomeDistribution = i.filter(res => res.mId == 2)
            this.occupationDistribution = i.filter(res => res.mId == 3)
            this.featuresDistribution = i.filter(res => res.mId == 4)
          }
        }
        this.$apply()
      } else {
        utils.alert(json.data.msg || json.data.description)
      }
    } catch (e) {
      console.log(e)
      utils.alert('系统异常')
    }
  }

  events = {
    cancelAll() {
      this.saveTimeShow = false
      this.showNature = false
      this.showScale = false
      this.showIndustry = false
      this.showList = false
      this.showAge = false
      this.showSex = false
      this.showIncome = false
      this.showJob = false
      this.showJobList = false
      this.showSp = false
      this.showSpList = false
      this.$apply()
    },
    saveTime(dataFrom, dataTo, count) {
      this.saveTimeDistribution.push({
        'type': 0,
        'mid': 0,
        'dataFrom': dataFrom,
        'dataTo': dataTo,
        'name': '',
        'count': count,
        'code': ''
      })
      this.saveTimeShow = false
      this.$apply()
    },
    nature(code, name, count) {
      this.natureDistribution.push({
        'type': 0,
        'mid': 1,
        'dataFrom': 0,
        'dataTo': 0,
        'name': name,
        'count': count,
        'code': code
      })
      this.showNature = false
      this.$apply()
    },
    scale(dataFrom, dataTo, count) {
      this.scaleDistribution.push({
        'type': 0,
        'mid': 2,
        'dataFrom': dataFrom,
        'dataTo': dataTo,
        'name': '',
        'count': count,
        'code': ''
      })
      this.showScale = false
      this.$apply()
    },
    industry(code, name, count) {
      this.industryDistribution.push({
        'type': 0,
        'mid': 3,
        'dataFrom': 0,
        'dataTo': 0,
        'name': name,
        'count': count,
        'code': code
      })
      this.showIndustry = false
      this.$apply()
    },
    saveList() {
      this.showIndustry = true
      this.showList = false
      this.$apply()
    },
    async showList(value) {
      try {
        const json = await api.loadAllIndustry({
          method: 'GET',
          // query: {
            //actorId: wx.getStorageSync('id')
          //}
        })
        if (json.data.code === 'success') {
          // this.showList = true
          this.list = json.data.data
          this.showIndustry = false
          this.showList = value
          this.$apply()
        } else {
          utils.alert(json.data.description)
        }
      } catch (e) {
        console.log(e)
        utils.alert('系统异常')
      }
      // this.$apply()
    },
    saveJobList() {
      this.showJob = true
      this.showJobList = false
      this.$apply()
    },
    async showJobList(value) {
      try {
        const json = await api.loadAllOccupation()
        if (json.data.code === 'success') {
          // this.showList = true
          this.jobList = json.data.data
          this.showJob = false
          this.showJobList = value
          this.$apply()
        } else {
          utils.alert(json.data.description)
        }
      } catch (e) {
        console.log(e)
        utils.alert('系统异常')
      }
      // this.$apply()
    },
    saveSpList () {
      this.showSp = true
      this.showSpList = false
      this.$apply()
    },
    async showSpList(value) {
      try {
        const json = await api.loadAllIdentity()
        if (json.data.code === 'success') {
          // this.showList = true
          this.spList = json.data.data
          this.showSp = false
          this.showSpList = value
          this.$apply()
        } else {
          utils.alert(json.data.description)
        }
      } catch (e) {
        console.log(e)
        utils.alert('系统异常')
      }
      // this.$apply()
    },
    saveAge(dataFrom, dataTo, count) {
      this.ageDistribution.push({
        'type': 1,
        'mid': 0,
        'dataFrom': dataFrom,
        'dataTo': dataTo,
        'name': '',
        'count': count,
        'code': ''
      })
      this.showAge = false
      this.$apply()
    },
    saveSex(count) {
      this.sexDistribution.push({
        'type': 1,
        'mid': 1,
        'dataFrom': 0,
        'dataTo': 0,
        'name': '',
        'count': count,
        'code': ''
      })
      this.showSex = false
      this.$apply()
    },
    savePrice(dataFrom, dataTo, count) {
      this.incomeDistribution.push({
        'type': 1,
        'mid': 2,
        'dataFrom': dataFrom,
        'dataTo': dataTo,
        'name': '',
        'count': count,
        'code': ''
      })
      this.showIncome = false
      this.$apply()
    },
    saveJob(code, name, count) {
      this.occupationDistribution.push({
        'type': 1,
        'mid': 3,
        'dataFrom': 0,
        'dataTo': 0,
        'name': name,
        'count': count,
        'code': code
      })
      this.showJob = false
      this.$apply()
    },
    saveSp(code, name, count) {
      this.featuresDistribution.push({
        'type': 1,
        'mid': 4,
        'dataFrom': 0,
        'dataTo': 0,
        'name': name,
        'count': count,
        'code': code
      })
      this.showSp = false
      this.$apply()
    }
  }
}
</script>
