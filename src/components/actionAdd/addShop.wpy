<style>

</style>
<template>
  <view>
    <van-cell-group>
      <picker mode="multiSelector" bindchange="bindMultiPickerChange" bindcolumnchange="bindMultiPickerColumnChange" range-key="name" value="{{multiIndex}}" range="{{listA}}">
        <van-cell title="所在地" value="{{areaName}}" is-link/>
      </picker>
      <view class="item">
        <van-field
          id="direStore"
          value="{{direStore}}"
          label="直营店"
          type="number"
          placeholder="0"
          bind:change="onChange"
          use-button-slot
        >
          <text slot="button">家</text>
        </van-field>
        <van-field
          id="joinStore"
          value="{{joinStore}}"
          type="number"
          label="加盟店"
          placeholder="0"
          bind:change="onChange"
          use-button-slot
        >
          <text slot="button">家</text>
        </van-field>
      </view>
    </van-cell-group>
    <view class="fix">
    <button type="warn" @tap="addShop">保存</button>
    <button class="cancel" @tap="cancel">取消</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import utils from '@/utils/utils'

export default class Demo extends wepy.page {
  config = {
    navigationBarTitleText: '添加门店所在地分布',
    usingComponents: {
      'van-cell': '../../components/van/cell/index',
      'van-cell-group': '../../components/van/cell-group/index',
      'van-field': '../../components/van/field/index',
      'van-panel': '../../components/van/panel/index',
    }
  }

  props = {
    listA: {
        type: Array,
        twoWay: true,
        default: [[],[]]
    },
    
  }

  data = {
    hqLocal: '',
    joinStore: '',
    direStore: '',
    multiIndex: [0,0],
    areaCode: '',
    areaName: '',
  }

  methods = {
    onChange(e) {
      this[e.target.id] = e.detail
      this.$apply();
    },
    addShop() {
      if (!this.areaCode || !this.direStore || !this.joinStore) {
        utils.alert('有未填写的项目')
        return
      }
      this.$emit('addShop', {areaCode: this.areaCode, areaName: this.areaName, direStore: parseInt(this.direStore), joinStore: parseInt(this.joinStore)});
      this.direStore = '';
      this.joinStore = '';
      this.$apply();
    },
    bindMultiPickerChange(e) {
      this.areaCode = this.listA[2][e.detail.value[2]].areaCode
      this.areaName = `${this.listA[0][e.detail.value[0]].name} ${this.listA[1][e.detail.value[1]].name} ${this.listA[2][e.detail.value[2]].name}`
      this.multiIndex = e.detail.value
      this.$apply()
    },
    bindMultiPickerColumnChange: function (e) {
      if (e.detail.column == 0) {
        this.$emit('changeB', this.listA[0][e.detail.value].id)
      } else if (e.detail.column == 1) {
        this.$emit('changeC', this.listA[1][e.detail.value].id)
      }
    },
    cancel() {
      this.$emit('cancelAll')
    }
  }


}
</script>
